package com.sample
 
import com.sample.DroolsTest.Plec; 
import com.sample.DroolsTest.Relacja;
import com.sample.DroolsTest.Osoba;  
 
rule "Init"
	when
	then
		Osoba maria          = new Osoba("Maria");
		Osoba ewa            = new Osoba("Ewa");
		Osoba agata          = new Osoba("Agata");
		Osoba anna           = new Osoba("Anna");
		Osoba agnieszka      = new Osoba("Agnieszka");
		Osoba beata          = new Osoba("Beata");
		Osoba iwona          = new Osoba("Iwona");
		Osoba joanna         = new Osoba("Joanna");
		Osoba piotr          = new Osoba("Piotr");
		Osoba adam           = new Osoba("Adam");
		Osoba marek          = new Osoba("Marek");
		Osoba robert         = new Osoba("Robert");
		Osoba jan            = new Osoba("Jan");
		Osoba krzysztof      = new Osoba("Krzysztof");
		Osoba radek          = new Osoba("Radek");
		Osoba darek          = new Osoba("Darek");
		Osoba tomek          = new Osoba("Tomek");
		Osoba jacek          = new Osoba("Jacek");

		insert(new Relacja(maria,marek,"rodzic"));
		insert(new Relacja(maria,agata,"rodzic"));
		insert(new Relacja(maria,jan,"rodzic"));
		insert(new Relacja(piotr,marek,"rodzic"));
		insert(new Relacja(piotr,agata,"rodzic"));
		insert(new Relacja(piotr,jan,"rodzic"));
		insert(new Relacja(ewa,anna,"rodzic"));
		insert(new Relacja(ewa,joanna,"rodzic"));
		insert(new Relacja(ewa,krzysztof,"rodzic"));
		insert(new Relacja(adam,anna,"rodzic"));
		insert(new Relacja(adam,joanna,"rodzic"));
		insert(new Relacja(adam,krzysztof,"rodzic"));
		insert(new Relacja(agata,radek,"rodzic"));
		insert(new Relacja(agata,beata,"rodzic"));
		insert(new Relacja(robert,radek,"rodzic"));
		insert(new Relacja(robert,beata,"rodzic"));
		insert(new Relacja(anna,darek,"rodzic"));
		insert(new Relacja(anna,tomek,"rodzic"));
		insert(new Relacja(jan,darek,"rodzic"));
		insert(new Relacja(jan,tomek,"rodzic"));
		insert(new Relacja(agnieszka,jacek,"rodzic"));
		insert(new Relacja(agnieszka,iwona,"rodzic"));
		insert(new Relacja(krzysztof,jacek,"rodzic"));
		insert(new Relacja(krzysztof,iwona,"rodzic"));

end

rule "PlecKobieta0"
	when
		r : Relacja(osoby[0].imie str[endsWith] 'a' && osoby[0].plec == Plec.NIEZNANA)
	then
		r.osoby[0].plec = Plec.KOBIETA;	
		for (Relacja rel : r.osoby[0].relacje){
			update(rel);
		}
		System.out.println(r.osoby[0].imie + " to " + r.osoby[0].plec);
end

rule "PlecKobieta1"
	when
		r : Relacja(osoby[1].imie str[endsWith] 'a' && osoby[1].plec == Plec.NIEZNANA)
	then
		r.osoby[1].plec = Plec.KOBIETA;	
		for (Relacja rel : r.osoby[1].relacje){
			update(rel);
		}
		System.out.println(r.osoby[1].imie + " to " + r.osoby[1].plec);
end

rule "PlecMezczyzna0"
	when
		r : Relacja(osoby[0].imie not str[endsWith] 'a' && osoby[0].plec == Plec.NIEZNANA)
	then
		r.osoby[0].plec = Plec.MEZCZYZNA;
		for (Relacja rel : r.osoby[0].relacje){
			update(rel);
		}
		System.out.println(r.osoby[0].imie + " to " + r.osoby[0].plec);
end

rule "PlecMezczyzna1"
	when
		r : Relacja(osoby[1].imie not str[endsWith] 'a' && osoby[1].plec == Plec.NIEZNANA)
	then
		r.osoby[1].plec = Plec.MEZCZYZNA;
		for (Relacja rel : r.osoby[1].relacje){
			update(rel);
		}
		System.out.println(r.osoby[1].imie + " to " + r.osoby[1].plec);
end

rule "Matka"
	when
		r: Relacja(osoby[0].plec == Plec.KOBIETA && relacja == "rodzic")
	then
		System.out.println(r.osoby[0] + " jest matką " + r.osoby[1]);
		insert(new Relacja(r.osoby[0], r.osoby[1], "matka"));
end

rule "Ojciec"
	when
		r: Relacja(osoby[0].plec == Plec.MEZCZYZNA && relacja == "rodzic")
	then
		System.out.println(r.osoby[0] + " jest ojcem " + r.osoby[1]);
		insert(new Relacja(r.osoby[0], r.osoby[1], "ojciec"));
end

rule "Babcia"
	when
		r1: Relacja(relacja == "matka")
		r2: Relacja(osoby[0] == r1.osoby[1], relacja == "rodzic")
	then
		System.out.println(r1.osoby[0] + " jest babcią " + r2.osoby[1]);
		insert(new Relacja(r1.osoby[0], r2.osoby[1], "babcia"));
end

rule "Dziadek"
	when
		r1: Relacja(relacja == "ojciec")
		r2: Relacja(osoby[0] == r1.osoby[1], relacja == "rodzic")
	then
		System.out.println(r1.osoby[0] + " jest dziadkiem " + r2.osoby[1]);
		insert(new Relacja(r1.osoby[0], r2.osoby[1], "dziadek"));
end

rule "Brat"
	when
		r1: Relacja(relacja == "rodzic", osoby[1].plec == Plec.MEZCZYZNA);
		r2: Relacja(relacja == "rodzic", osoby[0] == r1.osoby[0], osoby[1] != r1.osoby[1]);
		not Relacja(osoby[0] == r1.osoby[1], osoby[1] == r2.osoby[1], relacja == "brat");
	then
		System.out.println(r1.osoby[1] + " jest bratem " + r2.osoby[1]);
		insert(new Relacja(r1.osoby[1], r2.osoby[1], "brat"));
end

rule "Siostra"
	when
		r1: Relacja(relacja == "rodzic", osoby[1].plec == Plec.KOBIETA);
		r2: Relacja(relacja == "rodzic", osoby[0] == r1.osoby[0], osoby[1] != r1.osoby[1]);
		not Relacja(osoby[0] == r1.osoby[1], osoby[1] == r2.osoby[1], relacja == "siostra");
	then
		System.out.println(r1.osoby[1] + " jest siostrą " + r2.osoby[1]);
		insert(new Relacja(r1.osoby[1], r2.osoby[1], "siostra"));
end

rule "Stryj"
	when
		r1: Relacja(relacja == "brat")
		r2: Relacja(relacja == "ojciec", osoby[0] == r1.osoby[1])
	then
		System.out.println(r1.osoby[0] + " jest stryjem " + r2.osoby[1]);
		insert(new Relacja(r1.osoby[0], r2.osoby[1], "stryj"));
end

rule "Wuj"
	when
		r1: Relacja(relacja == "brat")
		r2: Relacja(relacja == "matka", osoby[0] == r1.osoby[1])
	then
		System.out.println(r1.osoby[0] + " jest wujem " + r2.osoby[1]);
		insert(new Relacja(r1.osoby[0], r2.osoby[1], "wuj"));
end

query "stryjkowie z bratankami"
	r: Relacja(relacja == "stryj")
end

query "wujkowie z siostrzencami"
	r: Relacja(relacja == "wuj")
end

/*import com.sample.DroolsTest.Message;
 
rule "Hello World"
    when
        m : Message( status == Message.HELLO, myMessage : message )
    then
        System.out.println( myMessage );
        m.setMessage( "Goodbye cruel world" );
        m.setStatus( Message.GOODBYE );
        update( m );
end

rule "GoodBye"
    when
        Message( status == Message.GOODBYE, myMessage : message )
    then
        System.out.println( myMessage );
end
*/